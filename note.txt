//
//这个笔记本用于记录学习git的过程中的代码和用处
//
//
创建版本库
    git init
    //把当前所在库变为一个git管理的仓库
向暂存区提交更改
    git add <file1> <file2>
    //将file1和file2添加到提交暂存区(stage)
将暂存区中的更改内容提交到仓库
    git commit -m "<any message>"
    //将已经在【提交暂存区】的内容提交到仓库
查看版本库状态
    git status
    //查看仓库当前状态，已更改未提交进暂存区和已经位于暂存区但未提交至仓库的文件和内容
查看版本库的具体更改内容
    git diff
    //查看对文件内容修改的具体内容变化
查看版本库commit记录
    git log
    //查看git提交记录
    --pretty=one 
        //输出较为简短的信息
    --graph
        //以时间线图形输出提交记录
恢复版本库版本
    git reset --hard <commit>
    //恢复为某个版本，HEAD指代当前版本 HEAD^指代上一个版本
    //HEAD^^指代上上个版本，HEAD～n指代n个之前的版本
查看对版本库更改的每次命令
    git reflog
    //显示每一次命令，可与reset配合，在回退到过去版本以后再次回退到未来版本
回退工作区更改
    git restore <file>
    git checkout -- <file>
    //把file在工作区的修改回退到最近一次add或commit的状态
回退已经提交到暂存区的更改
    git restore --stage <file>
    git reset HEAD <file>
    //将已经在暂存区的文件退回工作区，stage代表暂存区
从版本库移除一个文件
    git rm <file>
    //将一个已经位于仓库中的文件从仓库中移除，移除后要commit
从版本库恢复一个文件
    git restore <file>
    git checkout -- <file>
    //恢复file，不管是file已经被更改或是删除
远程版本库相关命令
    远程版本库信息
        git remote -v
    将版本库链接到远程
        git remote add <origin> <repository>
        //将当前仓库链接到Git服务器上的仓库，
        //origin代表本地命名的远程仓库，repository为ssh或https地址
    删除远程版本库链接
        git remote remove <origin>
    将commit推送到远程
        git push (-u) <origin> <branch>
        //第一次push的时候使用 -u 来链接本地库和远程库的branch
        //不带参数默认push当前branch
    从远程库clone一个库
        git clone <repository>
        //clone一个库，repository为ssh或https地址
分支管理相关命令
    创建并切换新branch
        git branch <branch>
        git checkout -b <branch>
    切换到某个branch
        git checkout <branch>
    查看branch
        git branch
